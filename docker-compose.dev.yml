services:
  pocket_kai_api:
    container_name: pocket_kai_fastapi
    build:
      dockerfile: docker/Dockerfile
      context: ./pocket_kai_api_service
      target: development
    ports:
      - "8001:8000"
    restart: unless-stopped
    env_file:
      - ./pocket_kai_api_service/.env
    depends_on:
      - pocket_kai_postgres
      - kai_parser_api
    volumes:
      - ./pocket_kai_api_service:/app

  kai_parser_api:
    container_name: kai_parser_fastapi
    build:
      dockerfile: docker/Dockerfile
      context: ./kai_parser_service
      target: development
    ports:
      - "8002:8000"
    restart: unless-stopped
    depends_on:
      - kai_parser_postgres
    volumes:
      - ./kai_parser_service:/app

  kai_parser_postgres:
    container_name: kai_parser_postgres
    image: postgres:16
    env_file:
      - ./kai_parser_service/.env
    ports:
      - "5433:5432"
    restart: unless-stopped
    volumes:
      - kai_parser_postgres_data:/var/lib/postgresql/data

  database_updater_service:
    container_name: database_updater
    build:
      dockerfile: docker/Dockerfile
      context: ./database_updater_service
      target: development
    restart: unless-stopped
    env_file:
      - ./database_updater_service/.env
    depends_on:
      - pocket_kai_api
      - kai_parser_api
    volumes:
      - ./database_updater_service:/app

  pocket_kai_postgres:
    image: postgres:16-alpine
    container_name: pocket_kai_postgres
    restart: unless-stopped
    env_file:
      - ./pocket_kai_api_service/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"

  prometheus:
    image: prom/prometheus:latest
    container_name: pocket_kai_prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus_data/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'

  grafana:
    image: grafana/grafana:latest
    container_name: pocket_kai_grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - node_exporter
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  postgres_data:

  kai_parser_postgres_data:

  grafana_data:

  prometheus_data:
